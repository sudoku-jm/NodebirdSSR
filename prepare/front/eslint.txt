eslint 메모

{
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "node": true
  },
  "extends": ["eslint:recommended", "plugin:react/recommended"],
  "plugins": ["import", "react-hooks"],
  "rules": {
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "no-console": "off"
  }
}


===========================================================

module.exports = {
  // 코드 포맷을 prettier로 설정
  // plugins: ["prettier"],
  plugins: ["import", "react-hooks"],

  // eslint의 룰을 기본 권장설정으로 설정
  extends: [
    "eslint:recommended",
    // "plugin:prettier/recommended"
  ],

  // 코드를 해석하는 parser에 대한 설정
  parserOptions: {
    // 자바스크립트 버전, 7은 ECMA2016
    ecmaVersion: 7,
    // 모듈 export를 위해 import, export를 사용 가능여부를 설정, script는 사용불가
    sourceType: "module",
    // jsx 허용을 설정, back-end 설정이기 때문에 사용 안함
    ecmaFeatures: {
      jsx: true,
    },
  },

  // linter가 파일을 분석할 때, 미리 정의된 전역변수에 무엇이 있는지 명시하는 속성
  env: {
    // 브라우저의 document와 같은 객체 사용 여부
    browser: true,
    // node.js에서 console과 같은 전역변수 사용 여부
    node: true,
    es6: true,
  },
  // ESLint가 무시할 디렉토리, 파일을 설정
  ignorePatterns: ["node_modules/"],

  // ESLint 룰을 설정
  rules: {
    // prettier에 맞게 룰을 설정
    // "prettier/prettier": "warn",
    "object-curly-newline": 0,
  },
}


//=====================================
.eslintrc 파일

{
    "parser": "babel-eslint", //bable이 해석해서 최신문법도 에러를 발생시키지 않게 한다.
    "parserOptions": {
      "ecmaVersion": 2020,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "env": {
      "browser": true,
      "node": true,
      "es6" : true
    },
    // "extends": ["eslint:recommended", "plugin:react/recommended"],
    "extends": [
      "airbnb"
      // "plugin:prettier/recommended"
    ],    //airbnb가 스타일 규칙을 엄격하게 규제한다.
    // "plugins": ["import", "react-hooks"],
    "plugins": [
      "import",
      "react-hooks",
      "jsx-a11y"
    ],
    "rules": {
      "jsx-a11y/label-has-associated-control": "off",
      "jsx-a11y/anchor-is-valid": "off",
      "no-console": "off",
      "no-underscore-dangle": "off",
      "react/forbid-prop-types": "off",
      "react/prop-types": "off",
      "react/jsx-filename-extension": "off",
      "react/jsx-one-expression-per-line": "off",
      "react/jsx-wrap-multilines": "off",
      "react/no-array-index-key": "off",
      "object-curly-newline": "off",
      "linebreak-style": "off",
      "arrow-body-style": "off",
      "comma-dangle": "off",
      "consistent-return": "off",
      "operator-linebreak": "off",
      "react/function-component-definition" : "off",
      "jsx-a11y/no-noninteractive-element-interactions" : "off",
      "jsx-a11y/click-events-have-key-events" : "off",
      "eslint no-use-before-define" : "off",
      "default-param-last": "off"
      "max-len" : "off"
    }
  }
  /*
  "parser": "bable-eslint" 
  느슨해서 막 코딩해도 에러가 안뜬다
  2020년 6월 기준 옵셔널 체이닝 지원이 안된다.
  지원해주기 위해 수정
  <설치>

  babel-eslint
  eslint-config-aribnb
  eslint-plugin-import

  npm i -D babel-eslint eslint-config-aribnb eslint-plugin-import

  npm i -D eslint-plugin-react-hooks

  npm i -D eslint-plugin-jsx-a11y
  */